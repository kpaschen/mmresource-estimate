- name: install depencencies
  apt:
    pkg:
      - postgresql-client
    state: latest
    update_cache: true

- name: get the mattermost package
  unarchive:
    src: "https://releases.mattermost.com/{{ mm_version }}/mattermost-{{ mm_version }}-linux-amd64.tar.gz"
    dest: /opt
    remote_src: true
    validate_certs: yes

- name: create mattermost/data foldder
  file:
    path: /opt/mattermost/data
    state: directory

- name: create the Mattermost group
  ansible.builtin.group:
    name: mattermost
    state: present
    system: yes

- name: create the Mattermost user
  ansible.builtin.user:
    name: mattermost
    groups: mattermost
    system: yes

- name: give write permissions to the mattermost group
  ansible.builtin.file:
    path: /opt/mattermost
    owner: mattermost
    group: mattermost
    mode: g+w
    recurse: yes

- name: set up the database driver in the file /opt/mattermost/config/config.json
  ansible.builtin.lineinfile:
    path: /opt/mattermost/config/config.json
    regexp: '"DataSource":'
    line: '    "DataSource": "postgres://{{ db_username }}:{{ db_password }}@{{ db_private_ip }}:5432/{{ db_name }}?sslmode=disable&connect_timeout=10",'

- name: enable user creation
  ansible.builtin.lineinfile:
    path: /opt/mattermost/config/config.json
    regexp: '"EnableUserCreation":'
    line: '      "EnableUserCreation": true,'

- name: enable open server
  ansible.builtin.lineinfile:
    path: /opt/mattermost/config/config.json
    regexp: '"EnableOpenServer":'
    line: '      "EnableOpenServer": true,'

- name: set up Mattermost to use systemd for starting and stopping.
  template:
    src: files/mattermost.service
    dest: /lib/systemd/system/

- name: enable mattermost.service
  ansible.builtin.systemd:
    name: mattermost.service
    enabled: yes
    masked: no

- name: make systemd load the new unit.
  ansible.builtin.systemd:
    daemon_reload: yes

- name: start the mattermost service.
  ansible.builtin.systemd:
    state: started
    name: mattermost.service



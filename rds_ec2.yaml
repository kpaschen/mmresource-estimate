AWSTemplateFormatVersion: '2010-09-09'
Description: "RDS and EC2 instances with Cloudformation"
Parameters:
  DbInstanceIdentifier:
    Type: String
    Default: "mattermostcloudform"
  DbName: 
    Description: Database name
    Type: String
    MinLength: '1'
    MaxLength: '40'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
  DbUser:
    NoEcho: 'true'
    Description: Master username
    Type: String
    MinLength: '1'
    MaxLength: '20'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
  DbPassword:
    NoEcho: 'true'
    Description: Master password
    Type: String
    MinLength: '1'
    MaxLength: '35'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
  DbStorage:
    Default: '5'
    Description: The size of the database (Gb)
    Type: Number
    MinValue: '5'
    MaxValue: '1000'
    ConstraintDescription: must be between 5 and 1000Gb.
  DbInstance:
    Description: The database instance type
    Type: String
    Default: db.t3.micro
    ConstraintDescription: must select a valid database instance type.

  VPC:
    Type: String

  AvailabilityZone:
    Type: AWS::EC2::AvailabilityZone::Name


Resources:
  RDBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: !Ref "DbInstanceIdentifier"
      DBName: !Ref 'DbName'
      AllocatedStorage: !Ref 'DbStorage'
      DBInstanceClass: !Ref 'DbInstance'
      Engine: postgres
      MasterUsername: !Ref 'DbUser'
      MasterUserPassword: !Ref 'DbPassword'
      AvailabilityZone: !Ref "AvailabilityZone"
      VPCSecurityGroups:
      - !GetAtt DBSecurityGroup.GroupId
      # - !Ref "DBSecurityGroup"
      Tags:
        - Key: Name
          Value: "RDS Cloudform"

  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
       GroupDescription: Allow postgres inbound traffic
       VpcId: !Ref "VPC"
       SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: 0.0.0.0/0

  MattermostEc2Instance:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: !Ref "AvailabilityZone"
      ImageId: "ami-065deacbcaac64cf2"
      InstanceType: "t2.micro"
      KeyName: "mmkey"
      BlockDeviceMappings: 
      - DeviceName: "/dev/sda1"
        Ebs: 
          VolumeType: "gp2"
          DeleteOnTermination: "true"
          VolumeSize: "15"
      SecurityGroupIds:
        - !Ref mmEc2SecurityGroup
      UserData:
        Fn::Base64: 
          !Sub |
            #!/bin/bash
            sudo apt update
            sudo apt install nginx -y
            sudo systemctl start nginx
            sudo systemctl enable nginx
            sudo apt install postgresql postgresql-contrib
            sudo wget https://releases.mattermost.com/7.1.2/mattermost-7.1.2-linux-amd64.tar.gz
            sudo tar -xvzf mattermost*.gz
            sudo mv mattermost /opt
            sudo mkdir /opt/mattermost/data
            sudo useradd --system --user-group mattermost
            sudo chown -R mattermost:mattermost /opt/mattermost
            sudo chmod -R g+w /opt/mattermost
      Tags:
        - Key: "Name"
          Value: "EC2Cloudform"

  mmEc2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow Http/Https and ssh, Mattermost inbound and outbound traffic"
      VpcId: !Ref "VPC"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8065
          ToPort: 8065
          CidrIp: 0.0.0.0/0





